@Technique default{
@Pass{
  @BlendFunc(SRC_ALPHA,ONE_MINUS_SRC_ALPHA)
  FS_PREC(mediump,float)
  #ifdef ATTRIBUTE_COLOR_ENABLED
  varying vec4 vColor;
  #endif

  varying vec2 vTexCoord;
  #ifdef VS

  attribute vec3 position;

  #ifdef ATTRIBUTE_TEXCOORD_ENABLED
  @TEXCOORD
  attribute vec2 texCoord;
  #endif
  @MODELVIEWPROJECTION
  uniform mat4 _matPVM;

  #ifdef ATTRIBUTE_COLOR_ENABLED
  @COLOR
  attribute vec4 attrColor;
  #endif

  void main()
  {
    gl_Position = _matPVM * vec4(position,1.0);
    #ifdef ATTRIBUTE_TEXCOORD_ENABLED
    vTexCoord = texCoord;
    #endif
    #ifndef ATTRIBUTE_TEXCOORD_ENABLED
    vTexCoord = position.xy/2.0 + vec2(0.5);
    #endif
    #ifdef ATTRIBUTE_COLOR_ENABLED
    vColor = attrColor;
    #endif
  }
  #endif
  #ifdef FS
  @{type:"color",default:"white"}
  uniform vec4 color;

  uniform sampler2D texture;
  @HAS_TEXTURE{sampler:"texture"}
  uniform bool _textureUsed;

  uniform float _time;
  void main(void)
  {
    vec4 baseColor = color;
    #ifdef ATTRIBUTE_COLOR_ENABLED
    baseColor *= vColor;
    #endif
    if(_textureUsed){
      gl_FragColor = baseColor * texture2D(texture,vTexCoord);
    }else{
      gl_FragColor = baseColor;
   }
  }
  #endif
}
}

@Technique hitarea{
  @Disable(BLEND)
  @Pass{
    FS_PREC(mediump,float)

    #ifdef VS
      attribute vec3 position;
      uniform mat4 _matPVM;

      void main(){
        gl_Position = _matPVM * vec4(position,1.0);
      }
    #endif

    #ifdef FS
      @MESH_INDEX
      uniform vec4 meshIndex;
      void main(){
        gl_FragColor = meshIndex;
      }
    #endif
  }
}
