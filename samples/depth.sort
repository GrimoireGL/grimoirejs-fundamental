@Pass

@NoBlend()

attribute vec3 position;
varying vec4 vPosition;

@vert{
  uniform mat4 _matPVM;

  void main(){
    vPosition = _matPVM * vec4(position,1);
    gl_Position = vPosition;
  }
}

@frag{
uniform float depthOffset;

@{default:"0.1"}
uniform float near;
@{default:"20"}
uniform float far;


vec4 convRGBA(float depth){
    float r = depth;
    float g = fract(r * 255.0);
    float b = fract(g * 255.0);
    float a = fract(b * 255.0);
    float coef = 1.0 / 255.0;
    r -= g * coef;
    g -= b * coef;
    b -= a * coef;
    return vec4(r, g, b, a);
}

float convCoord(float depth, float offset){
    float d = clamp(depth + offset, 0.0, 1.0);
    if(d > 0.6){
        d = 2.5 * (1.0 - d);
    }else if(d > 0.4){
        d = 1.0;
    }else{
        d *= 2.5;
    }
    return d;
}

void main(void){
  float linerDepth = 1.0 / (far - near);
    float liner     = linerDepth * length(vPosition);
    vec4  convColor = convRGBA(convCoord(liner, depthOffset));
    gl_FragColor    = convColor;
}

}
